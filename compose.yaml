# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Docker compose reference guide at
# https://docs.docker.com/go/compose-spec-reference/

# Here the instructions define your application as a service called "app".
# This service is built from the Dockerfile in the current directory.
# You can add other services your application may depend on here, such as a
# database or a cache. For examples, see the Awesome Compose repository:
# https://github.com/docker/awesome-compose
services:
  backend:
    build:
      context: kukkanettisivu
      target: dev
    ports:
      - 0.0.0.0:8000:8000
    secrets:
      - backend-env
    environment:
      - DEBUG=1
      - ALLOWED_HOSTS="*"
    volumes:
      - ./kukkanettisivu:/app
      - django-media:/var/www/images
    depends_on:
      - db

  frontend:
    build:
      context: frontend
      target: dev
    ports:
      - 127.0.0.1:5173:5173
        #not used
        #environment:
        #REACT_APP_API_URL: https://api.kukkanettisivu.local:5173/api/
    volumes:
      - type: bind
        source: ./frontend
        target: /app
      - /app/node_modules
    depends_on:
      - backend
  
  db:
    image: postgres:15.5
      #ei toimi
      #secrets:
      #- backend-env
    environment:
      - POSTGRES_USER=phppgadmin 
      - POSTGRES_DB=kukkanettisivu
      - POSTGRES_PASSWORD=Hr72jfoaG
    restart: always
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./kukkanettisivu/knsdbex.pgsql:/exportdata
  
  nginx:
    build:
      context: /var/www/images
    ports:
      - 127.0.0.1:800:800
    restart: always
    volumes:
      - type: bind
        source: ./nginx/nginx.conf
        target: /etc/nginx/conf.d/default.conf
        read_only: true
      - django-media:/var/www/images
    depends_on:
      - backend
      - frontend

volumes: 
  db-data:
  django-media:

secrets:
  backend-env:
    file: kukkanettisivu/kukkanettisivu/.env

    # The commented out section below is an example of how to define a PostgreSQL
    # database that your application can use. `depends_on` tells Docker Compose to
    # start the database before your application. The `db-data` volume persists the
    # database data between container restarts. The `db-password` secret is used
    # to set the database password. You must create `db/password.txt` and add
    # a password of your choosing to it before running `docker compose up`.
    #     depends_on:
    #       db:
    #         condition: service_healthy
    #   db:
    #     image: postgres
    #     restart: always
    #     user: postgres
    #     secrets:
    #       - db-password
    #     volumes:
    #       - db-data:/var/lib/postgresql/data
    #     environment:
    #       - POSTGRES_DB=example
    #       - POSTGRES_PASSWORD_FILE=/run/secrets/db-password
    #     expose:
    #       - 5432
    #     healthcheck:
    #       test: [ "CMD", "pg_isready" ]
    #       interval: 10s
    #       timeout: 5s
    #       retries: 5
    # volumes:
    #   db-data:
    # secrets:
    #   db-password:
    #     file: db/password.txt
